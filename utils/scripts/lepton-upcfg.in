#!/bin/sh
export GUILE_LOAD_COMPILED_PATH="@ccachedir@:${GUILE_LOAD_COMPILED_PATH}"
exec @GUILE@ "$0" "$@"
!#

;;
;; Lepton EDA
;; lepton-upcfg - gEDA => Lepton EDA configuration upgrade utility
;; Copyright (C) 2019 dmn <graahnul.grom@gmail.com>
;; Copyright (C) 2019-2020 Lepton EDA Contributors
;; License: GPLv2+. See the COPYING file
;;

( load-extension ( or (getenv "LIBLEPTON") "@libdir@/liblepton" )
                 "liblepton_init" )

; Avoid Scheme compile-time errors using a clever trick
; from netlist/scheme/lepton-netlist.in (see comments there):
;
( primitive-eval '(use-modules (ice-9 format)) )
( primitive-eval '(use-modules (lepton legacy-config)) )
( primitive-eval '(use-modules (ice-9 getopt-long)) )
( primitive-eval '(use-modules (lepton version)) )



; command line options:
;
( define cmd-line-args-spec
( list
  ( list ; --local (-l)
    'local
    ( list 'single-char #\l )
    ( list 'value        #f )
  )
  ( list ; --user (-u)
    'user
    ( list 'single-char #\u )
    ( list 'value        #f )
  )
  ( list ; --copy (-c)
    'copy
    ( list 'single-char #\c )
    ( list 'value        #f )
  )
  ( list ; --overwrite (-x)
    'overwrite
    ( list 'single-char #\x )
    ( list 'value        #f )
  )
  ( list ; --help (-h)
    'help
    ( list 'single-char #\h )
    ( list 'value        #f )
  )
  ( list ; --version (-V)
    'version
    ( list 'single-char #\V )
    ( list 'value        #f )
  )
)
) ; cmd-line-args-spec



( define ( usage exit-code )
  ( format #t "~
Usage: lepton-upcfg -l | -u | -o [-c] [-x]

Lepton EDA configuration upgrade utility.
Converts geda*.conf configuration files
to corresponding lepton*.conf files.
By default, the upgraded configuration
is printed to standard output.

Options:
  -l, --local      geda.conf => lepton.conf
                   (in current directory)
  -u, --user       geda-user.conf => lepton-user.conf
                   (in user configuration directory)
  -c, --copy       Write to configuration file, not STDOUT
  -x, --overwrite  Overwrite existing files
  -h, --help       Show usage information
  -V, --version    Show version information

Report bugs at <~a>
Lepton EDA homepage: <~a>
"
    ( lepton-version 'bugs )
    ( lepton-version 'url )
  )

  ( primitive-exit exit-code )
)



( define ( version )
  ( format #t "~a~%" ( lepton-version 'msg ) )
  ( primitive-exit 0 )
)



; program entry point:
;
( define ( main )
( let
  (
  ( cmd-line-args '() )
  ( args-len       0  )
  ( cfg-id         #f )
  ( copy           #f )
  ( overwrite      #f )
  )

  ( set! cmd-line-args
    ( getopt-long (program-arguments) cmd-line-args-spec )
  )

  ( set! args-len (length cmd-line-args) )
  ( when ( or (< args-len 2) (> args-len 4) )
    ( usage 1 )
  )

  ( if (option-ref cmd-line-args 'help #f)
    ( usage 0 )
  )
  ( if (option-ref cmd-line-args 'version #f)
    ( version )
  )

  ( if (option-ref cmd-line-args 'local #f)
    ( set! cfg-id 'geda-local )
  )
  ( if (option-ref cmd-line-args 'user #f)
    ( set! cfg-id 'geda-user3 )
  )

  ( unless cfg-id
    ( usage 1 )
  )

  ( set! copy      (option-ref cmd-line-args 'copy      #f) )
  ( set! overwrite (option-ref cmd-line-args 'overwrite #f) )


  ( upcfg-log "ii: converting [~a] configuration...~%~%" cfg-id )

  ( unless ( config-upgrade cfg-id #:copy copy #:overwrite overwrite )
    ( upcfg-log "lepton-upcfg: configuration upgrade failed.~%" )
    ( primitive-exit 1 )
  )

) ; let
) ; main()



; top-level code:
;
( main )

